// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import com.swipefwd.utils.wheelPicker.WheelPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogDobPickerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ConstraintLayout bottomSheet;

  @NonNull
  public final ConstraintLayout clSelectDob;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final CoordinatorLayout layoutMain;

  @NonNull
  public final LinearLayout llSelectDob;

  @NonNull
  public final WheelPicker pickerDay;

  @NonNull
  public final WheelPicker pickerMonth;

  @NonNull
  public final WheelPicker pickerYear;

  @NonNull
  public final RelativeLayout pullDown;

  @NonNull
  public final MaterialButton txtDone;

  @NonNull
  public final AppCompatTextView txtSelectDob;

  private DialogDobPickerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ConstraintLayout bottomSheet, @NonNull ConstraintLayout clSelectDob,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull CoordinatorLayout layoutMain,
      @NonNull LinearLayout llSelectDob, @NonNull WheelPicker pickerDay,
      @NonNull WheelPicker pickerMonth, @NonNull WheelPicker pickerYear,
      @NonNull RelativeLayout pullDown, @NonNull MaterialButton txtDone,
      @NonNull AppCompatTextView txtSelectDob) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.clSelectDob = clSelectDob;
    this.imgDialogGradient = imgDialogGradient;
    this.layoutMain = layoutMain;
    this.llSelectDob = llSelectDob;
    this.pickerDay = pickerDay;
    this.pickerMonth = pickerMonth;
    this.pickerYear = pickerYear;
    this.pullDown = pullDown;
    this.txtDone = txtDone;
    this.txtSelectDob = txtSelectDob;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDobPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDobPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_dob_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDobPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSheet;
      ConstraintLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.clSelectDob;
      ConstraintLayout clSelectDob = ViewBindings.findChildViewById(rootView, id);
      if (clSelectDob == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      CoordinatorLayout layoutMain = (CoordinatorLayout) rootView;

      id = R.id.llSelectDob;
      LinearLayout llSelectDob = ViewBindings.findChildViewById(rootView, id);
      if (llSelectDob == null) {
        break missingId;
      }

      id = R.id.pickerDay;
      WheelPicker pickerDay = ViewBindings.findChildViewById(rootView, id);
      if (pickerDay == null) {
        break missingId;
      }

      id = R.id.pickerMonth;
      WheelPicker pickerMonth = ViewBindings.findChildViewById(rootView, id);
      if (pickerMonth == null) {
        break missingId;
      }

      id = R.id.pickerYear;
      WheelPicker pickerYear = ViewBindings.findChildViewById(rootView, id);
      if (pickerYear == null) {
        break missingId;
      }

      id = R.id.pullDown;
      RelativeLayout pullDown = ViewBindings.findChildViewById(rootView, id);
      if (pullDown == null) {
        break missingId;
      }

      id = R.id.txtDone;
      MaterialButton txtDone = ViewBindings.findChildViewById(rootView, id);
      if (txtDone == null) {
        break missingId;
      }

      id = R.id.txtSelectDob;
      AppCompatTextView txtSelectDob = ViewBindings.findChildViewById(rootView, id);
      if (txtSelectDob == null) {
        break missingId;
      }

      return new DialogDobPickerBinding((CoordinatorLayout) rootView, bottomSheet, clSelectDob,
          imgDialogGradient, layoutMain, llSelectDob, pickerDay, pickerMonth, pickerYear, pullDown,
          txtDone, txtSelectDob);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
