// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.swipefwd.R;
import com.swipefwd.utils.RoundedImageView;
import com.swipefwd.utils.SlideToActView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMySingleFriendsListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialTextView btnConnect;

  @NonNull
  public final MaterialTextView btnGreenConnect;

  @NonNull
  public final ConstraintLayout btnNewRequest;

  @NonNull
  public final RelativeLayout cardLogo;

  @NonNull
  public final RoundedImageView cardLogo1;

  @NonNull
  public final RoundedImageView cardLogo2;

  @NonNull
  public final AppCompatImageView ivAlert;

  @NonNull
  public final AppCompatImageView ivCancel;

  @NonNull
  public final AppCompatImageView ivNotification;

  @NonNull
  public final ItemCircleConnectorBinding layout1;

  @NonNull
  public final ItemCircleConnectorBinding layout10;

  @NonNull
  public final ItemCircleConnectorBinding layout2;

  @NonNull
  public final ItemCircleConnectorBinding layout3;

  @NonNull
  public final ItemCircleConnectorBinding layout4;

  @NonNull
  public final ItemCircleConnectorBinding layout5;

  @NonNull
  public final ItemCircleConnectorBinding layout6;

  @NonNull
  public final ItemCircleConnectorBinding layout7;

  @NonNull
  public final ItemCircleConnectorBinding layout8;

  @NonNull
  public final ItemCircleConnectorBinding layout9;

  @NonNull
  public final ConstraintLayout layoutCenterFwd;

  @NonNull
  public final RelativeLayout layoutMain;

  @NonNull
  public final LinearLayout layoutNoMembers;

  @NonNull
  public final ConstraintLayout layoutToggle;

  @NonNull
  public final ConstraintLayout layoutView;

  @NonNull
  public final SlideToActView toggleUser;

  @NonNull
  public final TextView txtAddFriend;

  @NonNull
  public final TextView txtGreetMsg;

  @NonNull
  public final TextView txtHome;

  @NonNull
  public final TextView txtInviteFriends;

  @NonNull
  public final AppCompatTextView txtTip;

  @NonNull
  public final TextView txtTitle;

  @NonNull
  public final AppCompatTextView txtUser1;

  @NonNull
  public final AppCompatTextView txtUser2;

  private FragmentMySingleFriendsListBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialTextView btnConnect, @NonNull MaterialTextView btnGreenConnect,
      @NonNull ConstraintLayout btnNewRequest, @NonNull RelativeLayout cardLogo,
      @NonNull RoundedImageView cardLogo1, @NonNull RoundedImageView cardLogo2,
      @NonNull AppCompatImageView ivAlert, @NonNull AppCompatImageView ivCancel,
      @NonNull AppCompatImageView ivNotification, @NonNull ItemCircleConnectorBinding layout1,
      @NonNull ItemCircleConnectorBinding layout10, @NonNull ItemCircleConnectorBinding layout2,
      @NonNull ItemCircleConnectorBinding layout3, @NonNull ItemCircleConnectorBinding layout4,
      @NonNull ItemCircleConnectorBinding layout5, @NonNull ItemCircleConnectorBinding layout6,
      @NonNull ItemCircleConnectorBinding layout7, @NonNull ItemCircleConnectorBinding layout8,
      @NonNull ItemCircleConnectorBinding layout9, @NonNull ConstraintLayout layoutCenterFwd,
      @NonNull RelativeLayout layoutMain, @NonNull LinearLayout layoutNoMembers,
      @NonNull ConstraintLayout layoutToggle, @NonNull ConstraintLayout layoutView,
      @NonNull SlideToActView toggleUser, @NonNull TextView txtAddFriend,
      @NonNull TextView txtGreetMsg, @NonNull TextView txtHome, @NonNull TextView txtInviteFriends,
      @NonNull AppCompatTextView txtTip, @NonNull TextView txtTitle,
      @NonNull AppCompatTextView txtUser1, @NonNull AppCompatTextView txtUser2) {
    this.rootView = rootView;
    this.btnConnect = btnConnect;
    this.btnGreenConnect = btnGreenConnect;
    this.btnNewRequest = btnNewRequest;
    this.cardLogo = cardLogo;
    this.cardLogo1 = cardLogo1;
    this.cardLogo2 = cardLogo2;
    this.ivAlert = ivAlert;
    this.ivCancel = ivCancel;
    this.ivNotification = ivNotification;
    this.layout1 = layout1;
    this.layout10 = layout10;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layout4 = layout4;
    this.layout5 = layout5;
    this.layout6 = layout6;
    this.layout7 = layout7;
    this.layout8 = layout8;
    this.layout9 = layout9;
    this.layoutCenterFwd = layoutCenterFwd;
    this.layoutMain = layoutMain;
    this.layoutNoMembers = layoutNoMembers;
    this.layoutToggle = layoutToggle;
    this.layoutView = layoutView;
    this.toggleUser = toggleUser;
    this.txtAddFriend = txtAddFriend;
    this.txtGreetMsg = txtGreetMsg;
    this.txtHome = txtHome;
    this.txtInviteFriends = txtInviteFriends;
    this.txtTip = txtTip;
    this.txtTitle = txtTitle;
    this.txtUser1 = txtUser1;
    this.txtUser2 = txtUser2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMySingleFriendsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMySingleFriendsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_single_friends_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMySingleFriendsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConnect;
      MaterialTextView btnConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnConnect == null) {
        break missingId;
      }

      id = R.id.btnGreenConnect;
      MaterialTextView btnGreenConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnGreenConnect == null) {
        break missingId;
      }

      id = R.id.btnNewRequest;
      ConstraintLayout btnNewRequest = ViewBindings.findChildViewById(rootView, id);
      if (btnNewRequest == null) {
        break missingId;
      }

      id = R.id.cardLogo;
      RelativeLayout cardLogo = ViewBindings.findChildViewById(rootView, id);
      if (cardLogo == null) {
        break missingId;
      }

      id = R.id.cardLogo1;
      RoundedImageView cardLogo1 = ViewBindings.findChildViewById(rootView, id);
      if (cardLogo1 == null) {
        break missingId;
      }

      id = R.id.cardLogo2;
      RoundedImageView cardLogo2 = ViewBindings.findChildViewById(rootView, id);
      if (cardLogo2 == null) {
        break missingId;
      }

      id = R.id.ivAlert;
      AppCompatImageView ivAlert = ViewBindings.findChildViewById(rootView, id);
      if (ivAlert == null) {
        break missingId;
      }

      id = R.id.ivCancel;
      AppCompatImageView ivCancel = ViewBindings.findChildViewById(rootView, id);
      if (ivCancel == null) {
        break missingId;
      }

      id = R.id.ivNotification;
      AppCompatImageView ivNotification = ViewBindings.findChildViewById(rootView, id);
      if (ivNotification == null) {
        break missingId;
      }

      id = R.id.layout1;
      View layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout1 = ItemCircleConnectorBinding.bind(layout1);

      id = R.id.layout10;
      View layout10 = ViewBindings.findChildViewById(rootView, id);
      if (layout10 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout10 = ItemCircleConnectorBinding.bind(layout10);

      id = R.id.layout2;
      View layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout2 = ItemCircleConnectorBinding.bind(layout2);

      id = R.id.layout3;
      View layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout3 = ItemCircleConnectorBinding.bind(layout3);

      id = R.id.layout4;
      View layout4 = ViewBindings.findChildViewById(rootView, id);
      if (layout4 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout4 = ItemCircleConnectorBinding.bind(layout4);

      id = R.id.layout5;
      View layout5 = ViewBindings.findChildViewById(rootView, id);
      if (layout5 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout5 = ItemCircleConnectorBinding.bind(layout5);

      id = R.id.layout6;
      View layout6 = ViewBindings.findChildViewById(rootView, id);
      if (layout6 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout6 = ItemCircleConnectorBinding.bind(layout6);

      id = R.id.layout7;
      View layout7 = ViewBindings.findChildViewById(rootView, id);
      if (layout7 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout7 = ItemCircleConnectorBinding.bind(layout7);

      id = R.id.layout8;
      View layout8 = ViewBindings.findChildViewById(rootView, id);
      if (layout8 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout8 = ItemCircleConnectorBinding.bind(layout8);

      id = R.id.layout9;
      View layout9 = ViewBindings.findChildViewById(rootView, id);
      if (layout9 == null) {
        break missingId;
      }
      ItemCircleConnectorBinding binding_layout9 = ItemCircleConnectorBinding.bind(layout9);

      id = R.id.layoutCenterFwd;
      ConstraintLayout layoutCenterFwd = ViewBindings.findChildViewById(rootView, id);
      if (layoutCenterFwd == null) {
        break missingId;
      }

      RelativeLayout layoutMain = (RelativeLayout) rootView;

      id = R.id.layoutNoMembers;
      LinearLayout layoutNoMembers = ViewBindings.findChildViewById(rootView, id);
      if (layoutNoMembers == null) {
        break missingId;
      }

      id = R.id.layoutToggle;
      ConstraintLayout layoutToggle = ViewBindings.findChildViewById(rootView, id);
      if (layoutToggle == null) {
        break missingId;
      }

      id = R.id.layoutView;
      ConstraintLayout layoutView = ViewBindings.findChildViewById(rootView, id);
      if (layoutView == null) {
        break missingId;
      }

      id = R.id.toggleUser;
      SlideToActView toggleUser = ViewBindings.findChildViewById(rootView, id);
      if (toggleUser == null) {
        break missingId;
      }

      id = R.id.txtAddFriend;
      TextView txtAddFriend = ViewBindings.findChildViewById(rootView, id);
      if (txtAddFriend == null) {
        break missingId;
      }

      id = R.id.txtGreetMsg;
      TextView txtGreetMsg = ViewBindings.findChildViewById(rootView, id);
      if (txtGreetMsg == null) {
        break missingId;
      }

      id = R.id.txtHome;
      TextView txtHome = ViewBindings.findChildViewById(rootView, id);
      if (txtHome == null) {
        break missingId;
      }

      id = R.id.txtInviteFriends;
      TextView txtInviteFriends = ViewBindings.findChildViewById(rootView, id);
      if (txtInviteFriends == null) {
        break missingId;
      }

      id = R.id.txtTip;
      AppCompatTextView txtTip = ViewBindings.findChildViewById(rootView, id);
      if (txtTip == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      id = R.id.txtUser1;
      AppCompatTextView txtUser1 = ViewBindings.findChildViewById(rootView, id);
      if (txtUser1 == null) {
        break missingId;
      }

      id = R.id.txtUser2;
      AppCompatTextView txtUser2 = ViewBindings.findChildViewById(rootView, id);
      if (txtUser2 == null) {
        break missingId;
      }

      return new FragmentMySingleFriendsListBinding((RelativeLayout) rootView, btnConnect,
          btnGreenConnect, btnNewRequest, cardLogo, cardLogo1, cardLogo2, ivAlert, ivCancel,
          ivNotification, binding_layout1, binding_layout10, binding_layout2, binding_layout3,
          binding_layout4, binding_layout5, binding_layout6, binding_layout7, binding_layout8,
          binding_layout9, layoutCenterFwd, layoutMain, layoutNoMembers, layoutToggle, layoutView,
          toggleUser, txtAddFriend, txtGreetMsg, txtHome, txtInviteFriends, txtTip, txtTitle,
          txtUser1, txtUser2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
