// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserListForGiftCoinsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSend;

  @NonNull
  public final TextInputEditText edtFor;

  @NonNull
  public final TextInputEditText edtTo;

  @NonNull
  public final AppCompatImageView imgBack;

  @NonNull
  public final FrameLayout parentLayout;

  @NonNull
  public final ProgressBar progressCircular;

  @NonNull
  public final RecyclerView rvContacts;

  @NonNull
  public final RecyclerView rvYourTribe;

  @NonNull
  public final AppCompatTextView txtContacts;

  @NonNull
  public final AppCompatTextView txtFor;

  @NonNull
  public final AppCompatTextView txtTo;

  @NonNull
  public final AppCompatTextView txtYourTribe;

  @NonNull
  public final View view;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  private ActivityUserListForGiftCoinsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSend, @NonNull TextInputEditText edtFor,
      @NonNull TextInputEditText edtTo, @NonNull AppCompatImageView imgBack,
      @NonNull FrameLayout parentLayout, @NonNull ProgressBar progressCircular,
      @NonNull RecyclerView rvContacts, @NonNull RecyclerView rvYourTribe,
      @NonNull AppCompatTextView txtContacts, @NonNull AppCompatTextView txtFor,
      @NonNull AppCompatTextView txtTo, @NonNull AppCompatTextView txtYourTribe, @NonNull View view,
      @NonNull View view1, @NonNull View view2) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.edtFor = edtFor;
    this.edtTo = edtTo;
    this.imgBack = imgBack;
    this.parentLayout = parentLayout;
    this.progressCircular = progressCircular;
    this.rvContacts = rvContacts;
    this.rvYourTribe = rvYourTribe;
    this.txtContacts = txtContacts;
    this.txtFor = txtFor;
    this.txtTo = txtTo;
    this.txtYourTribe = txtYourTribe;
    this.view = view;
    this.view1 = view1;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserListForGiftCoinsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserListForGiftCoinsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_list_for_gift_coins, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserListForGiftCoinsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSend;
      MaterialButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.edtFor;
      TextInputEditText edtFor = ViewBindings.findChildViewById(rootView, id);
      if (edtFor == null) {
        break missingId;
      }

      id = R.id.edtTo;
      TextInputEditText edtTo = ViewBindings.findChildViewById(rootView, id);
      if (edtTo == null) {
        break missingId;
      }

      id = R.id.imgBack;
      AppCompatImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.parentLayout;
      FrameLayout parentLayout = ViewBindings.findChildViewById(rootView, id);
      if (parentLayout == null) {
        break missingId;
      }

      id = R.id.progressCircular;
      ProgressBar progressCircular = ViewBindings.findChildViewById(rootView, id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.rvContacts;
      RecyclerView rvContacts = ViewBindings.findChildViewById(rootView, id);
      if (rvContacts == null) {
        break missingId;
      }

      id = R.id.rvYourTribe;
      RecyclerView rvYourTribe = ViewBindings.findChildViewById(rootView, id);
      if (rvYourTribe == null) {
        break missingId;
      }

      id = R.id.txtContacts;
      AppCompatTextView txtContacts = ViewBindings.findChildViewById(rootView, id);
      if (txtContacts == null) {
        break missingId;
      }

      id = R.id.txtFor;
      AppCompatTextView txtFor = ViewBindings.findChildViewById(rootView, id);
      if (txtFor == null) {
        break missingId;
      }

      id = R.id.txtTo;
      AppCompatTextView txtTo = ViewBindings.findChildViewById(rootView, id);
      if (txtTo == null) {
        break missingId;
      }

      id = R.id.txtYourTribe;
      AppCompatTextView txtYourTribe = ViewBindings.findChildViewById(rootView, id);
      if (txtYourTribe == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new ActivityUserListForGiftCoinsBinding((ConstraintLayout) rootView, btnSend, edtFor,
          edtTo, imgBack, parentLayout, progressCircular, rvContacts, rvYourTribe, txtContacts,
          txtFor, txtTo, txtYourTribe, view, view1, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
