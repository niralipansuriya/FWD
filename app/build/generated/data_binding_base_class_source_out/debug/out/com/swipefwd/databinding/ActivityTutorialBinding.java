// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTutorialBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView ivBack;

  @NonNull
  public final ViewPager2 pager;

  @NonNull
  public final TabLayout tabTutorial;

  @NonNull
  public final TextView txtTutorial;

  private ActivityTutorialBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView ivBack, @NonNull ViewPager2 pager, @NonNull TabLayout tabTutorial,
      @NonNull TextView txtTutorial) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.pager = pager;
    this.tabTutorial = tabTutorial;
    this.txtTutorial = txtTutorial;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTutorialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTutorialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tutorial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTutorialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivBack;
      AppCompatImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.pager;
      ViewPager2 pager = ViewBindings.findChildViewById(rootView, id);
      if (pager == null) {
        break missingId;
      }

      id = R.id.tabTutorial;
      TabLayout tabTutorial = ViewBindings.findChildViewById(rootView, id);
      if (tabTutorial == null) {
        break missingId;
      }

      id = R.id.txtTutorial;
      TextView txtTutorial = ViewBindings.findChildViewById(rootView, id);
      if (txtTutorial == null) {
        break missingId;
      }

      return new ActivityTutorialBinding((ConstraintLayout) rootView, ivBack, pager, tabTutorial,
          txtTutorial);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
