// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLocationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSaveLocation;

  @NonNull
  public final View guideHalfHeight;

  @NonNull
  public final AppCompatImageView imgCancel;

  @NonNull
  public final AppCompatImageView imgCurrentLocation;

  @NonNull
  public final ConstraintLayout layoutAddress;

  @NonNull
  public final FragmentContainerView mapFragment;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final AppCompatTextView txtLocation;

  @NonNull
  public final AppCompatTextView txtLockLocation;

  @NonNull
  public final AppCompatTextView txtMove;

  private ActivityLocationBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSaveLocation, @NonNull View guideHalfHeight,
      @NonNull AppCompatImageView imgCancel, @NonNull AppCompatImageView imgCurrentLocation,
      @NonNull ConstraintLayout layoutAddress, @NonNull FragmentContainerView mapFragment,
      @NonNull ProgressBar progressBar, @NonNull AppCompatTextView txtLocation,
      @NonNull AppCompatTextView txtLockLocation, @NonNull AppCompatTextView txtMove) {
    this.rootView = rootView;
    this.btnSaveLocation = btnSaveLocation;
    this.guideHalfHeight = guideHalfHeight;
    this.imgCancel = imgCancel;
    this.imgCurrentLocation = imgCurrentLocation;
    this.layoutAddress = layoutAddress;
    this.mapFragment = mapFragment;
    this.progressBar = progressBar;
    this.txtLocation = txtLocation;
    this.txtLockLocation = txtLockLocation;
    this.txtMove = txtMove;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSaveLocation;
      MaterialButton btnSaveLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveLocation == null) {
        break missingId;
      }

      id = R.id.guideHalfHeight;
      View guideHalfHeight = ViewBindings.findChildViewById(rootView, id);
      if (guideHalfHeight == null) {
        break missingId;
      }

      id = R.id.imgCancel;
      AppCompatImageView imgCancel = ViewBindings.findChildViewById(rootView, id);
      if (imgCancel == null) {
        break missingId;
      }

      id = R.id.imgCurrentLocation;
      AppCompatImageView imgCurrentLocation = ViewBindings.findChildViewById(rootView, id);
      if (imgCurrentLocation == null) {
        break missingId;
      }

      id = R.id.layoutAddress;
      ConstraintLayout layoutAddress = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddress == null) {
        break missingId;
      }

      id = R.id.mapFragment;
      FragmentContainerView mapFragment = ViewBindings.findChildViewById(rootView, id);
      if (mapFragment == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.txtLocation;
      AppCompatTextView txtLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtLocation == null) {
        break missingId;
      }

      id = R.id.txtLockLocation;
      AppCompatTextView txtLockLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtLockLocation == null) {
        break missingId;
      }

      id = R.id.txtMove;
      AppCompatTextView txtMove = ViewBindings.findChildViewById(rootView, id);
      if (txtMove == null) {
        break missingId;
      }

      return new ActivityLocationBinding((ConstraintLayout) rootView, btnSaveLocation,
          guideHalfHeight, imgCancel, imgCurrentLocation, layoutAddress, mapFragment, progressBar,
          txtLocation, txtLockLocation, txtMove);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
