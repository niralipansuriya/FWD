// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.daimajia.swipe.SwipeLayout;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSelectedContactListBinding implements ViewBinding {
  @NonNull
  private final SwipeLayout rootView;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final LinearLayout layoutDelete;

  @NonNull
  public final SwipeLayout layoutUser;

  @NonNull
  public final AppCompatTextView txtContactName;

  @NonNull
  public final AppCompatTextView txtContactNumber;

  private ItemSelectedContactListBinding(@NonNull SwipeLayout rootView,
      @NonNull MaterialButton btnDelete, @NonNull LinearLayout layoutDelete,
      @NonNull SwipeLayout layoutUser, @NonNull AppCompatTextView txtContactName,
      @NonNull AppCompatTextView txtContactNumber) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.layoutDelete = layoutDelete;
    this.layoutUser = layoutUser;
    this.txtContactName = txtContactName;
    this.txtContactNumber = txtContactNumber;
  }

  @Override
  @NonNull
  public SwipeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSelectedContactListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSelectedContactListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_selected_contact_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSelectedContactListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.layoutDelete;
      LinearLayout layoutDelete = ViewBindings.findChildViewById(rootView, id);
      if (layoutDelete == null) {
        break missingId;
      }

      SwipeLayout layoutUser = (SwipeLayout) rootView;

      id = R.id.txtContactName;
      AppCompatTextView txtContactName = ViewBindings.findChildViewById(rootView, id);
      if (txtContactName == null) {
        break missingId;
      }

      id = R.id.txtContactNumber;
      AppCompatTextView txtContactNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtContactNumber == null) {
        break missingId;
      }

      return new ItemSelectedContactListBinding((SwipeLayout) rootView, btnDelete, layoutDelete,
          layoutUser, txtContactName, txtContactNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
