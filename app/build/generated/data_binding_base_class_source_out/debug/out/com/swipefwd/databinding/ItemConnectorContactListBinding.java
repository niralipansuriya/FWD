// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemConnectorContactListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView cbContactName;

  @NonNull
  public final ConstraintLayout layoutUserDetails;

  @NonNull
  public final AppCompatTextView txtContactName;

  @NonNull
  public final AppCompatTextView txtContactNumber;

  @NonNull
  public final MaterialTextView txtInvite;

  private ItemConnectorContactListBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView cbContactName, @NonNull ConstraintLayout layoutUserDetails,
      @NonNull AppCompatTextView txtContactName, @NonNull AppCompatTextView txtContactNumber,
      @NonNull MaterialTextView txtInvite) {
    this.rootView = rootView;
    this.cbContactName = cbContactName;
    this.layoutUserDetails = layoutUserDetails;
    this.txtContactName = txtContactName;
    this.txtContactNumber = txtContactNumber;
    this.txtInvite = txtInvite;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemConnectorContactListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemConnectorContactListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_connector_contact_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemConnectorContactListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbContactName;
      AppCompatImageView cbContactName = ViewBindings.findChildViewById(rootView, id);
      if (cbContactName == null) {
        break missingId;
      }

      ConstraintLayout layoutUserDetails = (ConstraintLayout) rootView;

      id = R.id.txtContactName;
      AppCompatTextView txtContactName = ViewBindings.findChildViewById(rootView, id);
      if (txtContactName == null) {
        break missingId;
      }

      id = R.id.txtContactNumber;
      AppCompatTextView txtContactNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtContactNumber == null) {
        break missingId;
      }

      id = R.id.txtInvite;
      MaterialTextView txtInvite = ViewBindings.findChildViewById(rootView, id);
      if (txtInvite == null) {
        break missingId;
      }

      return new ItemConnectorContactListBinding((ConstraintLayout) rootView, cbContactName,
          layoutUserDetails, txtContactName, txtContactNumber, txtInvite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
