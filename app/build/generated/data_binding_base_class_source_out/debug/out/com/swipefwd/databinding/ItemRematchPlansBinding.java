// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRematchPlansBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout layoutItemPlans;

  @NonNull
  public final AppCompatTextView txtPlanMonth;

  @NonNull
  public final AppCompatTextView txtPlanMonthOffer;

  @NonNull
  public final AppCompatTextView txtPlanValue;

  @NonNull
  public final AppCompatTextView txtSavePlan;

  private ItemRematchPlansBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout layoutItemPlans, @NonNull AppCompatTextView txtPlanMonth,
      @NonNull AppCompatTextView txtPlanMonthOffer, @NonNull AppCompatTextView txtPlanValue,
      @NonNull AppCompatTextView txtSavePlan) {
    this.rootView = rootView;
    this.layoutItemPlans = layoutItemPlans;
    this.txtPlanMonth = txtPlanMonth;
    this.txtPlanMonthOffer = txtPlanMonthOffer;
    this.txtPlanValue = txtPlanValue;
    this.txtSavePlan = txtSavePlan;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRematchPlansBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRematchPlansBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_rematch_plans, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRematchPlansBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout layoutItemPlans = (RelativeLayout) rootView;

      id = R.id.txtPlanMonth;
      AppCompatTextView txtPlanMonth = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanMonth == null) {
        break missingId;
      }

      id = R.id.txtPlanMonthOffer;
      AppCompatTextView txtPlanMonthOffer = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanMonthOffer == null) {
        break missingId;
      }

      id = R.id.txtPlanValue;
      AppCompatTextView txtPlanValue = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanValue == null) {
        break missingId;
      }

      id = R.id.txtSavePlan;
      AppCompatTextView txtSavePlan = ViewBindings.findChildViewById(rootView, id);
      if (txtSavePlan == null) {
        break missingId;
      }

      return new ItemRematchPlansBinding((RelativeLayout) rootView, layoutItemPlans, txtPlanMonth,
          txtPlanMonthOffer, txtPlanValue, txtSavePlan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
