// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogUserVerifiedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnContinue;

  @NonNull
  public final MaterialCardView cvUserVerified;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final AppCompatImageView imgUser;

  @NonNull
  public final RelativeLayout ivBlueTick;

  @NonNull
  public final LinearLayout llUserVerified;

  @NonNull
  public final RelativeLayout rlBtnContinue;

  private DialogUserVerifiedBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView btnContinue, @NonNull MaterialCardView cvUserVerified,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull AppCompatImageView imgUser,
      @NonNull RelativeLayout ivBlueTick, @NonNull LinearLayout llUserVerified,
      @NonNull RelativeLayout rlBtnContinue) {
    this.rootView = rootView;
    this.btnContinue = btnContinue;
    this.cvUserVerified = cvUserVerified;
    this.imgDialogGradient = imgDialogGradient;
    this.imgUser = imgUser;
    this.ivBlueTick = ivBlueTick;
    this.llUserVerified = llUserVerified;
    this.rlBtnContinue = rlBtnContinue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUserVerifiedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUserVerifiedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_user_verified, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUserVerifiedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnContinue;
      TextView btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.cvUserVerified;
      MaterialCardView cvUserVerified = ViewBindings.findChildViewById(rootView, id);
      if (cvUserVerified == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.imgUser;
      AppCompatImageView imgUser = ViewBindings.findChildViewById(rootView, id);
      if (imgUser == null) {
        break missingId;
      }

      id = R.id.ivBlueTick;
      RelativeLayout ivBlueTick = ViewBindings.findChildViewById(rootView, id);
      if (ivBlueTick == null) {
        break missingId;
      }

      id = R.id.llUserVerified;
      LinearLayout llUserVerified = ViewBindings.findChildViewById(rootView, id);
      if (llUserVerified == null) {
        break missingId;
      }

      id = R.id.rlBtnContinue;
      RelativeLayout rlBtnContinue = ViewBindings.findChildViewById(rootView, id);
      if (rlBtnContinue == null) {
        break missingId;
      }

      return new DialogUserVerifiedBinding((ConstraintLayout) rootView, btnContinue, cvUserVerified,
          imgDialogGradient, imgUser, ivBlueTick, llUserVerified, rlBtnContinue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
