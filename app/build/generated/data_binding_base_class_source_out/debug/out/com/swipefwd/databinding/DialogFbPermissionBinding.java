// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFbPermissionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnAllow;

  @NonNull
  public final MaterialButton btnNotNow;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final TextView txtMessage1;

  @NonNull
  public final TextView txtMessage2;

  private DialogFbPermissionBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnAllow, @NonNull MaterialButton btnNotNow,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull TextView txtMessage1,
      @NonNull TextView txtMessage2) {
    this.rootView = rootView;
    this.btnAllow = btnAllow;
    this.btnNotNow = btnNotNow;
    this.imgDialogGradient = imgDialogGradient;
    this.txtMessage1 = txtMessage1;
    this.txtMessage2 = txtMessage2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFbPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFbPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_fb_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFbPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAllow;
      MaterialButton btnAllow = ViewBindings.findChildViewById(rootView, id);
      if (btnAllow == null) {
        break missingId;
      }

      id = R.id.btnNotNow;
      MaterialButton btnNotNow = ViewBindings.findChildViewById(rootView, id);
      if (btnNotNow == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.txtMessage1;
      TextView txtMessage1 = ViewBindings.findChildViewById(rootView, id);
      if (txtMessage1 == null) {
        break missingId;
      }

      id = R.id.txtMessage2;
      TextView txtMessage2 = ViewBindings.findChildViewById(rootView, id);
      if (txtMessage2 == null) {
        break missingId;
      }

      return new DialogFbPermissionBinding((ConstraintLayout) rootView, btnAllow, btnNotNow,
          imgDialogGradient, txtMessage1, txtMessage2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
