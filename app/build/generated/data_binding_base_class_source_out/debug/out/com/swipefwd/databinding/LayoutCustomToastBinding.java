// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCustomToastBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout customToastContainer;

  @NonNull
  public final AppCompatImageView ivCancel;

  @NonNull
  public final AppCompatTextView toastText;

  private LayoutCustomToastBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout customToastContainer, @NonNull AppCompatImageView ivCancel,
      @NonNull AppCompatTextView toastText) {
    this.rootView = rootView;
    this.customToastContainer = customToastContainer;
    this.ivCancel = ivCancel;
    this.toastText = toastText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCustomToastBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCustomToastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_custom_toast, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCustomToastBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout customToastContainer = (RelativeLayout) rootView;

      id = R.id.ivCancel;
      AppCompatImageView ivCancel = ViewBindings.findChildViewById(rootView, id);
      if (ivCancel == null) {
        break missingId;
      }

      id = R.id.toastText;
      AppCompatTextView toastText = ViewBindings.findChildViewById(rootView, id);
      if (toastText == null) {
        break missingId;
      }

      return new LayoutCustomToastBinding((RelativeLayout) rootView, customToastContainer, ivCancel,
          toastText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
