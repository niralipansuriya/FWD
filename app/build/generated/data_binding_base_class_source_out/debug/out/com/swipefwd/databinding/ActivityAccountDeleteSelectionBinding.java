// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatRadioButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountDeleteSelectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnBack;

  @NonNull
  public final MaterialButton btnClose;

  @NonNull
  public final MaterialButton btnDeleteCancel;

  @NonNull
  public final MaterialButton btnDeleteYes;

  @NonNull
  public final ConstraintLayout layoutMain;

  @NonNull
  public final AppCompatRadioButton userConnector;

  @NonNull
  public final AppCompatRadioButton userDater;

  @NonNull
  public final View view;

  @NonNull
  public final View view1;

  private ActivityAccountDeleteSelectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnBack, @NonNull MaterialButton btnClose,
      @NonNull MaterialButton btnDeleteCancel, @NonNull MaterialButton btnDeleteYes,
      @NonNull ConstraintLayout layoutMain, @NonNull AppCompatRadioButton userConnector,
      @NonNull AppCompatRadioButton userDater, @NonNull View view, @NonNull View view1) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnClose = btnClose;
    this.btnDeleteCancel = btnDeleteCancel;
    this.btnDeleteYes = btnDeleteYes;
    this.layoutMain = layoutMain;
    this.userConnector = userConnector;
    this.userDater = userDater;
    this.view = view;
    this.view1 = view1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountDeleteSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountDeleteSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account_delete_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountDeleteSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      MaterialButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnClose;
      MaterialButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnDeleteCancel;
      MaterialButton btnDeleteCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteCancel == null) {
        break missingId;
      }

      id = R.id.btnDeleteYes;
      MaterialButton btnDeleteYes = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteYes == null) {
        break missingId;
      }

      ConstraintLayout layoutMain = (ConstraintLayout) rootView;

      id = R.id.userConnector;
      AppCompatRadioButton userConnector = ViewBindings.findChildViewById(rootView, id);
      if (userConnector == null) {
        break missingId;
      }

      id = R.id.userDater;
      AppCompatRadioButton userDater = ViewBindings.findChildViewById(rootView, id);
      if (userDater == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      return new ActivityAccountDeleteSelectionBinding((ConstraintLayout) rootView, btnBack,
          btnClose, btnDeleteCancel, btnDeleteYes, layoutMain, userConnector, userDater, view,
          view1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
