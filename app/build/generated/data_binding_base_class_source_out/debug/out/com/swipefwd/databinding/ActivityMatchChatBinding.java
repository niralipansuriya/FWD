// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.ramijemli.percentagechartview.PercentageChartView;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMatchChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnAddTime;

  @NonNull
  public final TextInputEditText edtMessage;

  @NonNull
  public final Group extendGroup;

  @NonNull
  public final ConstraintLayout imageLayout;

  @NonNull
  public final AppCompatImageView imgHand;

  @NonNull
  public final AppCompatImageView imgToolbarUser;

  @NonNull
  public final AppCompatImageView imgUser;

  @NonNull
  public final AppCompatImageView ivBack;

  @NonNull
  public final AppCompatImageView ivCamera;

  @NonNull
  public final AppCompatImageView ivError;

  @NonNull
  public final AppCompatImageView ivOptions;

  @NonNull
  public final AppCompatImageView ivRecord;

  @NonNull
  public final AppCompatImageView ivSend;

  @NonNull
  public final AppCompatImageView ivVideo;

  @NonNull
  public final ConstraintLayout layoutExtendTime;

  @NonNull
  public final Group msgGroup;

  @NonNull
  public final PercentageChartView progressMatch;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtExpire;

  @NonNull
  public final TextView txtExtendDesc;

  @NonNull
  public final TextView txtExtendTitle;

  @NonNull
  public final TextView txtMatched;

  @NonNull
  public final TextView txtMsg;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtToolbarName;

  private ActivityMatchChatBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnAddTime, @NonNull TextInputEditText edtMessage,
      @NonNull Group extendGroup, @NonNull ConstraintLayout imageLayout,
      @NonNull AppCompatImageView imgHand, @NonNull AppCompatImageView imgToolbarUser,
      @NonNull AppCompatImageView imgUser, @NonNull AppCompatImageView ivBack,
      @NonNull AppCompatImageView ivCamera, @NonNull AppCompatImageView ivError,
      @NonNull AppCompatImageView ivOptions, @NonNull AppCompatImageView ivRecord,
      @NonNull AppCompatImageView ivSend, @NonNull AppCompatImageView ivVideo,
      @NonNull ConstraintLayout layoutExtendTime, @NonNull Group msgGroup,
      @NonNull PercentageChartView progressMatch, @NonNull TextView txtDate,
      @NonNull TextView txtExpire, @NonNull TextView txtExtendDesc,
      @NonNull TextView txtExtendTitle, @NonNull TextView txtMatched, @NonNull TextView txtMsg,
      @NonNull TextView txtName, @NonNull TextView txtToolbarName) {
    this.rootView = rootView;
    this.btnAddTime = btnAddTime;
    this.edtMessage = edtMessage;
    this.extendGroup = extendGroup;
    this.imageLayout = imageLayout;
    this.imgHand = imgHand;
    this.imgToolbarUser = imgToolbarUser;
    this.imgUser = imgUser;
    this.ivBack = ivBack;
    this.ivCamera = ivCamera;
    this.ivError = ivError;
    this.ivOptions = ivOptions;
    this.ivRecord = ivRecord;
    this.ivSend = ivSend;
    this.ivVideo = ivVideo;
    this.layoutExtendTime = layoutExtendTime;
    this.msgGroup = msgGroup;
    this.progressMatch = progressMatch;
    this.txtDate = txtDate;
    this.txtExpire = txtExpire;
    this.txtExtendDesc = txtExtendDesc;
    this.txtExtendTitle = txtExtendTitle;
    this.txtMatched = txtMatched;
    this.txtMsg = txtMsg;
    this.txtName = txtName;
    this.txtToolbarName = txtToolbarName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMatchChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMatchChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_match_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMatchChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddTime;
      MaterialButton btnAddTime = ViewBindings.findChildViewById(rootView, id);
      if (btnAddTime == null) {
        break missingId;
      }

      id = R.id.edtMessage;
      TextInputEditText edtMessage = ViewBindings.findChildViewById(rootView, id);
      if (edtMessage == null) {
        break missingId;
      }

      id = R.id.extendGroup;
      Group extendGroup = ViewBindings.findChildViewById(rootView, id);
      if (extendGroup == null) {
        break missingId;
      }

      id = R.id.imageLayout;
      ConstraintLayout imageLayout = ViewBindings.findChildViewById(rootView, id);
      if (imageLayout == null) {
        break missingId;
      }

      id = R.id.imgHand;
      AppCompatImageView imgHand = ViewBindings.findChildViewById(rootView, id);
      if (imgHand == null) {
        break missingId;
      }

      id = R.id.imgToolbarUser;
      AppCompatImageView imgToolbarUser = ViewBindings.findChildViewById(rootView, id);
      if (imgToolbarUser == null) {
        break missingId;
      }

      id = R.id.imgUser;
      AppCompatImageView imgUser = ViewBindings.findChildViewById(rootView, id);
      if (imgUser == null) {
        break missingId;
      }

      id = R.id.ivBack;
      AppCompatImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivCamera;
      AppCompatImageView ivCamera = ViewBindings.findChildViewById(rootView, id);
      if (ivCamera == null) {
        break missingId;
      }

      id = R.id.ivError;
      AppCompatImageView ivError = ViewBindings.findChildViewById(rootView, id);
      if (ivError == null) {
        break missingId;
      }

      id = R.id.ivOptions;
      AppCompatImageView ivOptions = ViewBindings.findChildViewById(rootView, id);
      if (ivOptions == null) {
        break missingId;
      }

      id = R.id.ivRecord;
      AppCompatImageView ivRecord = ViewBindings.findChildViewById(rootView, id);
      if (ivRecord == null) {
        break missingId;
      }

      id = R.id.ivSend;
      AppCompatImageView ivSend = ViewBindings.findChildViewById(rootView, id);
      if (ivSend == null) {
        break missingId;
      }

      id = R.id.ivVideo;
      AppCompatImageView ivVideo = ViewBindings.findChildViewById(rootView, id);
      if (ivVideo == null) {
        break missingId;
      }

      id = R.id.layoutExtendTime;
      ConstraintLayout layoutExtendTime = ViewBindings.findChildViewById(rootView, id);
      if (layoutExtendTime == null) {
        break missingId;
      }

      id = R.id.msgGroup;
      Group msgGroup = ViewBindings.findChildViewById(rootView, id);
      if (msgGroup == null) {
        break missingId;
      }

      id = R.id.progressMatch;
      PercentageChartView progressMatch = ViewBindings.findChildViewById(rootView, id);
      if (progressMatch == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtExpire;
      TextView txtExpire = ViewBindings.findChildViewById(rootView, id);
      if (txtExpire == null) {
        break missingId;
      }

      id = R.id.txtExtendDesc;
      TextView txtExtendDesc = ViewBindings.findChildViewById(rootView, id);
      if (txtExtendDesc == null) {
        break missingId;
      }

      id = R.id.txtExtendTitle;
      TextView txtExtendTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtExtendTitle == null) {
        break missingId;
      }

      id = R.id.txtMatched;
      TextView txtMatched = ViewBindings.findChildViewById(rootView, id);
      if (txtMatched == null) {
        break missingId;
      }

      id = R.id.txtMsg;
      TextView txtMsg = ViewBindings.findChildViewById(rootView, id);
      if (txtMsg == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtToolbarName;
      TextView txtToolbarName = ViewBindings.findChildViewById(rootView, id);
      if (txtToolbarName == null) {
        break missingId;
      }

      return new ActivityMatchChatBinding((ConstraintLayout) rootView, btnAddTime, edtMessage,
          extendGroup, imageLayout, imgHand, imgToolbarUser, imgUser, ivBack, ivCamera, ivError,
          ivOptions, ivRecord, ivSend, ivVideo, layoutExtendTime, msgGroup, progressMatch, txtDate,
          txtExpire, txtExtendDesc, txtExtendTitle, txtMatched, txtMsg, txtName, txtToolbarName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
