// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.swipefwd.R;
import com.swipefwd.utils.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMessagesTribeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardMessage;

  @NonNull
  public final RoundedImageView imgMessages;

  @NonNull
  public final AppCompatImageView imgOnline;

  @NonNull
  public final ConstraintLayout layoutMain;

  @NonNull
  public final TextView txtMessage;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final View viewTribe;

  private ItemMessagesTribeBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardMessage, @NonNull RoundedImageView imgMessages,
      @NonNull AppCompatImageView imgOnline, @NonNull ConstraintLayout layoutMain,
      @NonNull TextView txtMessage, @NonNull TextView txtName, @NonNull View viewTribe) {
    this.rootView = rootView;
    this.cardMessage = cardMessage;
    this.imgMessages = imgMessages;
    this.imgOnline = imgOnline;
    this.layoutMain = layoutMain;
    this.txtMessage = txtMessage;
    this.txtName = txtName;
    this.viewTribe = viewTribe;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMessagesTribeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMessagesTribeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_messages_tribe, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMessagesTribeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardMessage;
      MaterialCardView cardMessage = ViewBindings.findChildViewById(rootView, id);
      if (cardMessage == null) {
        break missingId;
      }

      id = R.id.imgMessages;
      RoundedImageView imgMessages = ViewBindings.findChildViewById(rootView, id);
      if (imgMessages == null) {
        break missingId;
      }

      id = R.id.imgOnline;
      AppCompatImageView imgOnline = ViewBindings.findChildViewById(rootView, id);
      if (imgOnline == null) {
        break missingId;
      }

      ConstraintLayout layoutMain = (ConstraintLayout) rootView;

      id = R.id.txtMessage;
      TextView txtMessage = ViewBindings.findChildViewById(rootView, id);
      if (txtMessage == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.viewTribe;
      View viewTribe = ViewBindings.findChildViewById(rootView, id);
      if (viewTribe == null) {
        break missingId;
      }

      return new ItemMessagesTribeBinding((ConstraintLayout) rootView, cardMessage, imgMessages,
          imgOnline, layoutMain, txtMessage, txtName, viewTribe);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
