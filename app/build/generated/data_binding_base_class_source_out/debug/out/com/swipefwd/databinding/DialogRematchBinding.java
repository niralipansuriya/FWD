// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogRematchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final LinearLayout layoutUserInfo;

  @NonNull
  public final AppCompatImageView roundedUserImage;

  @NonNull
  public final AppCompatTextView tvMessage;

  @NonNull
  public final AppCompatTextView tvUserCity;

  @NonNull
  public final AppCompatTextView tvUserName;

  @NonNull
  public final AppCompatTextView tvUserProfession;

  @NonNull
  public final MaterialButton txtRematch;

  @NonNull
  public final MaterialButton txtRemove;

  @NonNull
  public final View view;

  @NonNull
  public final CardView viewUserImage;

  private DialogRematchBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull LinearLayout layoutUserInfo,
      @NonNull AppCompatImageView roundedUserImage, @NonNull AppCompatTextView tvMessage,
      @NonNull AppCompatTextView tvUserCity, @NonNull AppCompatTextView tvUserName,
      @NonNull AppCompatTextView tvUserProfession, @NonNull MaterialButton txtRematch,
      @NonNull MaterialButton txtRemove, @NonNull View view, @NonNull CardView viewUserImage) {
    this.rootView = rootView;
    this.imgDialogGradient = imgDialogGradient;
    this.layoutUserInfo = layoutUserInfo;
    this.roundedUserImage = roundedUserImage;
    this.tvMessage = tvMessage;
    this.tvUserCity = tvUserCity;
    this.tvUserName = tvUserName;
    this.tvUserProfession = tvUserProfession;
    this.txtRematch = txtRematch;
    this.txtRemove = txtRemove;
    this.view = view;
    this.viewUserImage = viewUserImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogRematchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogRematchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_rematch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogRematchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.layoutUserInfo;
      LinearLayout layoutUserInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutUserInfo == null) {
        break missingId;
      }

      id = R.id.roundedUserImage;
      AppCompatImageView roundedUserImage = ViewBindings.findChildViewById(rootView, id);
      if (roundedUserImage == null) {
        break missingId;
      }

      id = R.id.tvMessage;
      AppCompatTextView tvMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvMessage == null) {
        break missingId;
      }

      id = R.id.tvUserCity;
      AppCompatTextView tvUserCity = ViewBindings.findChildViewById(rootView, id);
      if (tvUserCity == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      AppCompatTextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.tvUserProfession;
      AppCompatTextView tvUserProfession = ViewBindings.findChildViewById(rootView, id);
      if (tvUserProfession == null) {
        break missingId;
      }

      id = R.id.txtRematch;
      MaterialButton txtRematch = ViewBindings.findChildViewById(rootView, id);
      if (txtRematch == null) {
        break missingId;
      }

      id = R.id.txtRemove;
      MaterialButton txtRemove = ViewBindings.findChildViewById(rootView, id);
      if (txtRemove == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.viewUserImage;
      CardView viewUserImage = ViewBindings.findChildViewById(rootView, id);
      if (viewUserImage == null) {
        break missingId;
      }

      return new DialogRematchBinding((ConstraintLayout) rootView, imgDialogGradient,
          layoutUserInfo, roundedUserImage, tvMessage, tvUserCity, tvUserName, tvUserProfession,
          txtRematch, txtRemove, view, viewUserImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
