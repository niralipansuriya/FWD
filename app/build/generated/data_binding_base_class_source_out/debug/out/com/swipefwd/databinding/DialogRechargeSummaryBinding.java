// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogRechargeSummaryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnApplyBalance;

  @NonNull
  public final MaterialButton btnContinue;

  @NonNull
  public final MaterialButton btnPurchase;

  @NonNull
  public final MaterialCardView cardBottom;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final LinearLayout layoutTotalAmount;

  @NonNull
  public final AppCompatTextView txtAmount;

  @NonNull
  public final AppCompatTextView txtAmountValue;

  @NonNull
  public final AppCompatTextView txtCircle;

  @NonNull
  public final AppCompatTextView txtCircleValue;

  @NonNull
  public final AppCompatTextView txtNumber;

  @NonNull
  public final AppCompatTextView txtNumberValue;

  @NonNull
  public final AppCompatTextView txtPlanDesc;

  @NonNull
  public final AppCompatTextView txtPlanValue;

  @NonNull
  public final AppCompatTextView txtSummary;

  @NonNull
  public final AppCompatTextView txtTalktime;

  @NonNull
  public final AppCompatTextView txtTalktimeValue;

  @NonNull
  public final AppCompatTextView txtTotal;

  @NonNull
  public final AppCompatTextView txtTotalAmount;

  @NonNull
  public final AppCompatTextView txtValidity;

  @NonNull
  public final AppCompatTextView txtValidityValue;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view4;

  @NonNull
  public final View view5;

  private DialogRechargeSummaryBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnApplyBalance, @NonNull MaterialButton btnContinue,
      @NonNull MaterialButton btnPurchase, @NonNull MaterialCardView cardBottom,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull LinearLayout layoutTotalAmount,
      @NonNull AppCompatTextView txtAmount, @NonNull AppCompatTextView txtAmountValue,
      @NonNull AppCompatTextView txtCircle, @NonNull AppCompatTextView txtCircleValue,
      @NonNull AppCompatTextView txtNumber, @NonNull AppCompatTextView txtNumberValue,
      @NonNull AppCompatTextView txtPlanDesc, @NonNull AppCompatTextView txtPlanValue,
      @NonNull AppCompatTextView txtSummary, @NonNull AppCompatTextView txtTalktime,
      @NonNull AppCompatTextView txtTalktimeValue, @NonNull AppCompatTextView txtTotal,
      @NonNull AppCompatTextView txtTotalAmount, @NonNull AppCompatTextView txtValidity,
      @NonNull AppCompatTextView txtValidityValue, @NonNull View view1, @NonNull View view2,
      @NonNull View view3, @NonNull View view4, @NonNull View view5) {
    this.rootView = rootView;
    this.btnApplyBalance = btnApplyBalance;
    this.btnContinue = btnContinue;
    this.btnPurchase = btnPurchase;
    this.cardBottom = cardBottom;
    this.imgDialogGradient = imgDialogGradient;
    this.layoutTotalAmount = layoutTotalAmount;
    this.txtAmount = txtAmount;
    this.txtAmountValue = txtAmountValue;
    this.txtCircle = txtCircle;
    this.txtCircleValue = txtCircleValue;
    this.txtNumber = txtNumber;
    this.txtNumberValue = txtNumberValue;
    this.txtPlanDesc = txtPlanDesc;
    this.txtPlanValue = txtPlanValue;
    this.txtSummary = txtSummary;
    this.txtTalktime = txtTalktime;
    this.txtTalktimeValue = txtTalktimeValue;
    this.txtTotal = txtTotal;
    this.txtTotalAmount = txtTotalAmount;
    this.txtValidity = txtValidity;
    this.txtValidityValue = txtValidityValue;
    this.view1 = view1;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
    this.view5 = view5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogRechargeSummaryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogRechargeSummaryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_recharge_summary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogRechargeSummaryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApplyBalance;
      MaterialButton btnApplyBalance = ViewBindings.findChildViewById(rootView, id);
      if (btnApplyBalance == null) {
        break missingId;
      }

      id = R.id.btnContinue;
      MaterialButton btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.btnPurchase;
      MaterialButton btnPurchase = ViewBindings.findChildViewById(rootView, id);
      if (btnPurchase == null) {
        break missingId;
      }

      id = R.id.cardBottom;
      MaterialCardView cardBottom = ViewBindings.findChildViewById(rootView, id);
      if (cardBottom == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.layoutTotalAmount;
      LinearLayout layoutTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (layoutTotalAmount == null) {
        break missingId;
      }

      id = R.id.txtAmount;
      AppCompatTextView txtAmount = ViewBindings.findChildViewById(rootView, id);
      if (txtAmount == null) {
        break missingId;
      }

      id = R.id.txtAmountValue;
      AppCompatTextView txtAmountValue = ViewBindings.findChildViewById(rootView, id);
      if (txtAmountValue == null) {
        break missingId;
      }

      id = R.id.txtCircle;
      AppCompatTextView txtCircle = ViewBindings.findChildViewById(rootView, id);
      if (txtCircle == null) {
        break missingId;
      }

      id = R.id.txtCircleValue;
      AppCompatTextView txtCircleValue = ViewBindings.findChildViewById(rootView, id);
      if (txtCircleValue == null) {
        break missingId;
      }

      id = R.id.txtNumber;
      AppCompatTextView txtNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtNumber == null) {
        break missingId;
      }

      id = R.id.txtNumberValue;
      AppCompatTextView txtNumberValue = ViewBindings.findChildViewById(rootView, id);
      if (txtNumberValue == null) {
        break missingId;
      }

      id = R.id.txtPlanDesc;
      AppCompatTextView txtPlanDesc = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanDesc == null) {
        break missingId;
      }

      id = R.id.txtPlanValue;
      AppCompatTextView txtPlanValue = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanValue == null) {
        break missingId;
      }

      id = R.id.txtSummary;
      AppCompatTextView txtSummary = ViewBindings.findChildViewById(rootView, id);
      if (txtSummary == null) {
        break missingId;
      }

      id = R.id.txtTalktime;
      AppCompatTextView txtTalktime = ViewBindings.findChildViewById(rootView, id);
      if (txtTalktime == null) {
        break missingId;
      }

      id = R.id.txtTalktimeValue;
      AppCompatTextView txtTalktimeValue = ViewBindings.findChildViewById(rootView, id);
      if (txtTalktimeValue == null) {
        break missingId;
      }

      id = R.id.txtTotal;
      AppCompatTextView txtTotal = ViewBindings.findChildViewById(rootView, id);
      if (txtTotal == null) {
        break missingId;
      }

      id = R.id.txtTotalAmount;
      AppCompatTextView txtTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalAmount == null) {
        break missingId;
      }

      id = R.id.txtValidity;
      AppCompatTextView txtValidity = ViewBindings.findChildViewById(rootView, id);
      if (txtValidity == null) {
        break missingId;
      }

      id = R.id.txtValidityValue;
      AppCompatTextView txtValidityValue = ViewBindings.findChildViewById(rootView, id);
      if (txtValidityValue == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = ViewBindings.findChildViewById(rootView, id);
      if (view5 == null) {
        break missingId;
      }

      return new DialogRechargeSummaryBinding((ConstraintLayout) rootView, btnApplyBalance,
          btnContinue, btnPurchase, cardBottom, imgDialogGradient, layoutTotalAmount, txtAmount,
          txtAmountValue, txtCircle, txtCircleValue, txtNumber, txtNumberValue, txtPlanDesc,
          txtPlanValue, txtSummary, txtTalktime, txtTalktimeValue, txtTotal, txtTotalAmount,
          txtValidity, txtValidityValue, view1, view2, view3, view4, view5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
