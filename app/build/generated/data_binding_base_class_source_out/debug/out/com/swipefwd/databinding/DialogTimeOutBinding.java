// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogTimeOutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView backgroundView;

  @NonNull
  public final ConstraintLayout clTimeOut;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final LinearLayout llTimeOut;

  @NonNull
  public final RelativeLayout pullDown;

  @NonNull
  public final MaterialButton txtOk;

  @NonNull
  public final AppCompatTextView txtTimeOut;

  @NonNull
  public final AppCompatTextView txtTimeOutDesc;

  @NonNull
  public final AppCompatTextView txtTimeOutDesc2;

  private DialogTimeOutBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView backgroundView, @NonNull ConstraintLayout clTimeOut,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull LinearLayout llTimeOut,
      @NonNull RelativeLayout pullDown, @NonNull MaterialButton txtOk,
      @NonNull AppCompatTextView txtTimeOut, @NonNull AppCompatTextView txtTimeOutDesc,
      @NonNull AppCompatTextView txtTimeOutDesc2) {
    this.rootView = rootView;
    this.backgroundView = backgroundView;
    this.clTimeOut = clTimeOut;
    this.imgDialogGradient = imgDialogGradient;
    this.llTimeOut = llTimeOut;
    this.pullDown = pullDown;
    this.txtOk = txtOk;
    this.txtTimeOut = txtTimeOut;
    this.txtTimeOutDesc = txtTimeOutDesc;
    this.txtTimeOutDesc2 = txtTimeOutDesc2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogTimeOutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogTimeOutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_time_out, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogTimeOutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backgroundView;
      AppCompatImageView backgroundView = ViewBindings.findChildViewById(rootView, id);
      if (backgroundView == null) {
        break missingId;
      }

      id = R.id.clTimeOut;
      ConstraintLayout clTimeOut = ViewBindings.findChildViewById(rootView, id);
      if (clTimeOut == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.llTimeOut;
      LinearLayout llTimeOut = ViewBindings.findChildViewById(rootView, id);
      if (llTimeOut == null) {
        break missingId;
      }

      id = R.id.pullDown;
      RelativeLayout pullDown = ViewBindings.findChildViewById(rootView, id);
      if (pullDown == null) {
        break missingId;
      }

      id = R.id.txtOk;
      MaterialButton txtOk = ViewBindings.findChildViewById(rootView, id);
      if (txtOk == null) {
        break missingId;
      }

      id = R.id.txtTimeOut;
      AppCompatTextView txtTimeOut = ViewBindings.findChildViewById(rootView, id);
      if (txtTimeOut == null) {
        break missingId;
      }

      id = R.id.txtTimeOutDesc;
      AppCompatTextView txtTimeOutDesc = ViewBindings.findChildViewById(rootView, id);
      if (txtTimeOutDesc == null) {
        break missingId;
      }

      id = R.id.txtTimeOutDesc2;
      AppCompatTextView txtTimeOutDesc2 = ViewBindings.findChildViewById(rootView, id);
      if (txtTimeOutDesc2 == null) {
        break missingId;
      }

      return new DialogTimeOutBinding((ConstraintLayout) rootView, backgroundView, clTimeOut,
          imgDialogGradient, llTimeOut, pullDown, txtOk, txtTimeOut, txtTimeOutDesc,
          txtTimeOutDesc2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
