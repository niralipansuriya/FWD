// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.swipefwd.R;
import com.swipefwd.utils.wheelPicker.WheelPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogHeightPickerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ConstraintLayout bottomSheet;

  @NonNull
  public final MaterialButton btnSubmit;

  @NonNull
  public final MaterialCardView cardBottom;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final LinearLayout layoutConfirm;

  @NonNull
  public final LinearLayout layoutFt;

  @NonNull
  public final LinearLayout llSelectHeight;

  @NonNull
  public final RelativeLayout pullDown;

  @NonNull
  public final AppCompatTextView txtTimeOut;

  @NonNull
  public final WheelPicker wheelCM;

  @NonNull
  public final WheelPicker wheelFt;

  @NonNull
  public final WheelPicker wheelInch;

  private DialogHeightPickerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ConstraintLayout bottomSheet, @NonNull MaterialButton btnSubmit,
      @NonNull MaterialCardView cardBottom, @NonNull AppCompatImageView imgDialogGradient,
      @NonNull LinearLayout layoutConfirm, @NonNull LinearLayout layoutFt,
      @NonNull LinearLayout llSelectHeight, @NonNull RelativeLayout pullDown,
      @NonNull AppCompatTextView txtTimeOut, @NonNull WheelPicker wheelCM,
      @NonNull WheelPicker wheelFt, @NonNull WheelPicker wheelInch) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.btnSubmit = btnSubmit;
    this.cardBottom = cardBottom;
    this.imgDialogGradient = imgDialogGradient;
    this.layoutConfirm = layoutConfirm;
    this.layoutFt = layoutFt;
    this.llSelectHeight = llSelectHeight;
    this.pullDown = pullDown;
    this.txtTimeOut = txtTimeOut;
    this.wheelCM = wheelCM;
    this.wheelFt = wheelFt;
    this.wheelInch = wheelInch;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogHeightPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogHeightPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_height_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogHeightPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSheet;
      ConstraintLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.btn_submit;
      MaterialButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.cardBottom;
      MaterialCardView cardBottom = ViewBindings.findChildViewById(rootView, id);
      if (cardBottom == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.layoutConfirm;
      LinearLayout layoutConfirm = ViewBindings.findChildViewById(rootView, id);
      if (layoutConfirm == null) {
        break missingId;
      }

      id = R.id.layoutFt;
      LinearLayout layoutFt = ViewBindings.findChildViewById(rootView, id);
      if (layoutFt == null) {
        break missingId;
      }

      id = R.id.llSelectHeight;
      LinearLayout llSelectHeight = ViewBindings.findChildViewById(rootView, id);
      if (llSelectHeight == null) {
        break missingId;
      }

      id = R.id.pullDown;
      RelativeLayout pullDown = ViewBindings.findChildViewById(rootView, id);
      if (pullDown == null) {
        break missingId;
      }

      id = R.id.txtTimeOut;
      AppCompatTextView txtTimeOut = ViewBindings.findChildViewById(rootView, id);
      if (txtTimeOut == null) {
        break missingId;
      }

      id = R.id.wheelCM;
      WheelPicker wheelCM = ViewBindings.findChildViewById(rootView, id);
      if (wheelCM == null) {
        break missingId;
      }

      id = R.id.wheelFt;
      WheelPicker wheelFt = ViewBindings.findChildViewById(rootView, id);
      if (wheelFt == null) {
        break missingId;
      }

      id = R.id.wheelInch;
      WheelPicker wheelInch = ViewBindings.findChildViewById(rootView, id);
      if (wheelInch == null) {
        break missingId;
      }

      return new DialogHeightPickerBinding((CoordinatorLayout) rootView, bottomSheet, btnSubmit,
          cardBottom, imgDialogGradient, layoutConfirm, layoutFt, llSelectHeight, pullDown,
          txtTimeOut, wheelCM, wheelFt, wheelInch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
