// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCameraVerificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnCaptureImage;

  @NonNull
  public final ImageView btnFlash;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final ImageView rectangle;

  @NonNull
  public final FrameLayout surfaceView;

  private ActivityCameraVerificationBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnCaptureImage, @NonNull ImageView btnFlash, @NonNull ImageView imageView,
      @NonNull ImageView ivClose, @NonNull ImageView rectangle, @NonNull FrameLayout surfaceView) {
    this.rootView = rootView;
    this.btnCaptureImage = btnCaptureImage;
    this.btnFlash = btnFlash;
    this.imageView = imageView;
    this.ivClose = ivClose;
    this.rectangle = rectangle;
    this.surfaceView = surfaceView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCameraVerificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCameraVerificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_camera_verification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCameraVerificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCaptureImage;
      ImageView btnCaptureImage = ViewBindings.findChildViewById(rootView, id);
      if (btnCaptureImage == null) {
        break missingId;
      }

      id = R.id.btnFlash;
      ImageView btnFlash = ViewBindings.findChildViewById(rootView, id);
      if (btnFlash == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.ivClose;
      ImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.rectangle;
      ImageView rectangle = ViewBindings.findChildViewById(rootView, id);
      if (rectangle == null) {
        break missingId;
      }

      id = R.id.surfaceView;
      FrameLayout surfaceView = ViewBindings.findChildViewById(rootView, id);
      if (surfaceView == null) {
        break missingId;
      }

      return new ActivityCameraVerificationBinding((ConstraintLayout) rootView, btnCaptureImage,
          btnFlash, imageView, ivClose, rectangle, surfaceView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
