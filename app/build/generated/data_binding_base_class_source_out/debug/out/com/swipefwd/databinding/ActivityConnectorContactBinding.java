// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConnectorContactBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnContinue;

  @NonNull
  public final AppCompatImageView ivBack;

  @NonNull
  public final ConstraintLayout layoutMain;

  @NonNull
  public final NestedScrollView nestedView;

  @NonNull
  public final RecyclerView rbContactList;

  @NonNull
  public final RecyclerView rbFriendsOnFwd;

  @NonNull
  public final SearchView searchContact;

  @NonNull
  public final AppCompatTextView txtContacts;

  @NonNull
  public final AppCompatTextView txtFriendOnFwd;

  @NonNull
  public final AppCompatTextView txtInviteToFwd;

  @NonNull
  public final AppCompatTextView txtNoRecordFound;

  private ActivityConnectorContactBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnContinue, @NonNull AppCompatImageView ivBack,
      @NonNull ConstraintLayout layoutMain, @NonNull NestedScrollView nestedView,
      @NonNull RecyclerView rbContactList, @NonNull RecyclerView rbFriendsOnFwd,
      @NonNull SearchView searchContact, @NonNull AppCompatTextView txtContacts,
      @NonNull AppCompatTextView txtFriendOnFwd, @NonNull AppCompatTextView txtInviteToFwd,
      @NonNull AppCompatTextView txtNoRecordFound) {
    this.rootView = rootView;
    this.btnContinue = btnContinue;
    this.ivBack = ivBack;
    this.layoutMain = layoutMain;
    this.nestedView = nestedView;
    this.rbContactList = rbContactList;
    this.rbFriendsOnFwd = rbFriendsOnFwd;
    this.searchContact = searchContact;
    this.txtContacts = txtContacts;
    this.txtFriendOnFwd = txtFriendOnFwd;
    this.txtInviteToFwd = txtInviteToFwd;
    this.txtNoRecordFound = txtNoRecordFound;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConnectorContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConnectorContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_connector_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConnectorContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnContinue;
      MaterialButton btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.ivBack;
      AppCompatImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      ConstraintLayout layoutMain = (ConstraintLayout) rootView;

      id = R.id.nestedView;
      NestedScrollView nestedView = ViewBindings.findChildViewById(rootView, id);
      if (nestedView == null) {
        break missingId;
      }

      id = R.id.rbContactList;
      RecyclerView rbContactList = ViewBindings.findChildViewById(rootView, id);
      if (rbContactList == null) {
        break missingId;
      }

      id = R.id.rbFriendsOnFwd;
      RecyclerView rbFriendsOnFwd = ViewBindings.findChildViewById(rootView, id);
      if (rbFriendsOnFwd == null) {
        break missingId;
      }

      id = R.id.searchContact;
      SearchView searchContact = ViewBindings.findChildViewById(rootView, id);
      if (searchContact == null) {
        break missingId;
      }

      id = R.id.txtContacts;
      AppCompatTextView txtContacts = ViewBindings.findChildViewById(rootView, id);
      if (txtContacts == null) {
        break missingId;
      }

      id = R.id.txtFriendOnFwd;
      AppCompatTextView txtFriendOnFwd = ViewBindings.findChildViewById(rootView, id);
      if (txtFriendOnFwd == null) {
        break missingId;
      }

      id = R.id.txtInviteToFwd;
      AppCompatTextView txtInviteToFwd = ViewBindings.findChildViewById(rootView, id);
      if (txtInviteToFwd == null) {
        break missingId;
      }

      id = R.id.txtNoRecordFound;
      AppCompatTextView txtNoRecordFound = ViewBindings.findChildViewById(rootView, id);
      if (txtNoRecordFound == null) {
        break missingId;
      }

      return new ActivityConnectorContactBinding((ConstraintLayout) rootView, btnContinue, ivBack,
          layoutMain, nestedView, rbContactList, rbFriendsOnFwd, searchContact, txtContacts,
          txtFriendOnFwd, txtInviteToFwd, txtNoRecordFound);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
