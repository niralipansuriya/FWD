// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatRadioButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.swipefwd.R;
import com.swipefwd.utils.wheelPicker.WheelPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogMobileRechargeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnBundlePlan;

  @NonNull
  public final AppCompatRadioButton btnPostPaid;

  @NonNull
  public final AppCompatRadioButton btnPrePaid;

  @NonNull
  public final MaterialButton btnSelectAmount;

  @NonNull
  public final MaterialCardView cardBottom;

  @NonNull
  public final MaterialCardView cardCircleList;

  @NonNull
  public final MaterialCardView cardList;

  @NonNull
  public final TextInputEditText edtCircle;

  @NonNull
  public final TextInputEditText edtOperator;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final WheelPicker pickerCircle;

  @NonNull
  public final WheelPicker pickerOperator;

  @NonNull
  public final RadioGroup rgMobileType;

  @NonNull
  public final AppCompatTextView txtMobileNumber;

  private DialogMobileRechargeBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnBundlePlan, @NonNull AppCompatRadioButton btnPostPaid,
      @NonNull AppCompatRadioButton btnPrePaid, @NonNull MaterialButton btnSelectAmount,
      @NonNull MaterialCardView cardBottom, @NonNull MaterialCardView cardCircleList,
      @NonNull MaterialCardView cardList, @NonNull TextInputEditText edtCircle,
      @NonNull TextInputEditText edtOperator, @NonNull AppCompatImageView imgDialogGradient,
      @NonNull WheelPicker pickerCircle, @NonNull WheelPicker pickerOperator,
      @NonNull RadioGroup rgMobileType, @NonNull AppCompatTextView txtMobileNumber) {
    this.rootView = rootView;
    this.btnBundlePlan = btnBundlePlan;
    this.btnPostPaid = btnPostPaid;
    this.btnPrePaid = btnPrePaid;
    this.btnSelectAmount = btnSelectAmount;
    this.cardBottom = cardBottom;
    this.cardCircleList = cardCircleList;
    this.cardList = cardList;
    this.edtCircle = edtCircle;
    this.edtOperator = edtOperator;
    this.imgDialogGradient = imgDialogGradient;
    this.pickerCircle = pickerCircle;
    this.pickerOperator = pickerOperator;
    this.rgMobileType = rgMobileType;
    this.txtMobileNumber = txtMobileNumber;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogMobileRechargeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogMobileRechargeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_mobile_recharge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogMobileRechargeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBundlePlan;
      MaterialButton btnBundlePlan = ViewBindings.findChildViewById(rootView, id);
      if (btnBundlePlan == null) {
        break missingId;
      }

      id = R.id.btnPostPaid;
      AppCompatRadioButton btnPostPaid = ViewBindings.findChildViewById(rootView, id);
      if (btnPostPaid == null) {
        break missingId;
      }

      id = R.id.btnPrePaid;
      AppCompatRadioButton btnPrePaid = ViewBindings.findChildViewById(rootView, id);
      if (btnPrePaid == null) {
        break missingId;
      }

      id = R.id.btnSelectAmount;
      MaterialButton btnSelectAmount = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectAmount == null) {
        break missingId;
      }

      id = R.id.cardBottom;
      MaterialCardView cardBottom = ViewBindings.findChildViewById(rootView, id);
      if (cardBottom == null) {
        break missingId;
      }

      id = R.id.cardCircleList;
      MaterialCardView cardCircleList = ViewBindings.findChildViewById(rootView, id);
      if (cardCircleList == null) {
        break missingId;
      }

      id = R.id.cardList;
      MaterialCardView cardList = ViewBindings.findChildViewById(rootView, id);
      if (cardList == null) {
        break missingId;
      }

      id = R.id.edtCircle;
      TextInputEditText edtCircle = ViewBindings.findChildViewById(rootView, id);
      if (edtCircle == null) {
        break missingId;
      }

      id = R.id.edtOperator;
      TextInputEditText edtOperator = ViewBindings.findChildViewById(rootView, id);
      if (edtOperator == null) {
        break missingId;
      }

      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.pickerCircle;
      WheelPicker pickerCircle = ViewBindings.findChildViewById(rootView, id);
      if (pickerCircle == null) {
        break missingId;
      }

      id = R.id.pickerOperator;
      WheelPicker pickerOperator = ViewBindings.findChildViewById(rootView, id);
      if (pickerOperator == null) {
        break missingId;
      }

      id = R.id.rgMobileType;
      RadioGroup rgMobileType = ViewBindings.findChildViewById(rootView, id);
      if (rgMobileType == null) {
        break missingId;
      }

      id = R.id.txtMobileNumber;
      AppCompatTextView txtMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtMobileNumber == null) {
        break missingId;
      }

      return new DialogMobileRechargeBinding((ConstraintLayout) rootView, btnBundlePlan,
          btnPostPaid, btnPrePaid, btnSelectAmount, cardBottom, cardCircleList, cardList, edtCircle,
          edtOperator, imgDialogGradient, pickerCircle, pickerOperator, rgMobileType,
          txtMobileNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
