// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import com.swipefwd.utils.wheelPicker.WheelPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRedeemCoinsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnRedeemCoins;

  @NonNull
  public final AppCompatImageView imgBack;

  @NonNull
  public final AppCompatImageView ivCoin;

  @NonNull
  public final AppCompatImageView ivRupee;

  @NonNull
  public final AppCompatImageView ivStar;

  @NonNull
  public final ConstraintLayout layoutRedeemCoin;

  @NonNull
  public final RelativeLayout layoutSuccess;

  @NonNull
  public final WheelPicker pickerCoins;

  @NonNull
  public final WheelPicker pickerMoney;

  @NonNull
  public final View view;

  @NonNull
  public final View view1;

  private ActivityRedeemCoinsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnRedeemCoins, @NonNull AppCompatImageView imgBack,
      @NonNull AppCompatImageView ivCoin, @NonNull AppCompatImageView ivRupee,
      @NonNull AppCompatImageView ivStar, @NonNull ConstraintLayout layoutRedeemCoin,
      @NonNull RelativeLayout layoutSuccess, @NonNull WheelPicker pickerCoins,
      @NonNull WheelPicker pickerMoney, @NonNull View view, @NonNull View view1) {
    this.rootView = rootView;
    this.btnRedeemCoins = btnRedeemCoins;
    this.imgBack = imgBack;
    this.ivCoin = ivCoin;
    this.ivRupee = ivRupee;
    this.ivStar = ivStar;
    this.layoutRedeemCoin = layoutRedeemCoin;
    this.layoutSuccess = layoutSuccess;
    this.pickerCoins = pickerCoins;
    this.pickerMoney = pickerMoney;
    this.view = view;
    this.view1 = view1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRedeemCoinsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRedeemCoinsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_redeem_coins, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRedeemCoinsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRedeemCoins;
      MaterialButton btnRedeemCoins = ViewBindings.findChildViewById(rootView, id);
      if (btnRedeemCoins == null) {
        break missingId;
      }

      id = R.id.imgBack;
      AppCompatImageView imgBack = ViewBindings.findChildViewById(rootView, id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.ivCoin;
      AppCompatImageView ivCoin = ViewBindings.findChildViewById(rootView, id);
      if (ivCoin == null) {
        break missingId;
      }

      id = R.id.ivRupee;
      AppCompatImageView ivRupee = ViewBindings.findChildViewById(rootView, id);
      if (ivRupee == null) {
        break missingId;
      }

      id = R.id.ivStar;
      AppCompatImageView ivStar = ViewBindings.findChildViewById(rootView, id);
      if (ivStar == null) {
        break missingId;
      }

      id = R.id.layoutRedeemCoin;
      ConstraintLayout layoutRedeemCoin = ViewBindings.findChildViewById(rootView, id);
      if (layoutRedeemCoin == null) {
        break missingId;
      }

      id = R.id.layoutSuccess;
      RelativeLayout layoutSuccess = ViewBindings.findChildViewById(rootView, id);
      if (layoutSuccess == null) {
        break missingId;
      }

      id = R.id.pickerCoins;
      WheelPicker pickerCoins = ViewBindings.findChildViewById(rootView, id);
      if (pickerCoins == null) {
        break missingId;
      }

      id = R.id.pickerMoney;
      WheelPicker pickerMoney = ViewBindings.findChildViewById(rootView, id);
      if (pickerMoney == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      return new ActivityRedeemCoinsBinding((ConstraintLayout) rootView, btnRedeemCoins, imgBack,
          ivCoin, ivRupee, ivStar, layoutRedeemCoin, layoutSuccess, pickerCoins, pickerMoney, view,
          view1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
