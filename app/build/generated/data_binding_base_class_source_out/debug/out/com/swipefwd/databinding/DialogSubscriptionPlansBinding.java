// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.relex.circleindicator.CircleIndicator3;

public final class DialogSubscriptionPlansBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final CircleIndicator3 layoutIndicator;

  @NonNull
  public final CircleIndicator3 layoutIndicatorGreen;

  @NonNull
  public final RelativeLayout layoutPlan;

  @NonNull
  public final ViewPager2 planPager;

  @NonNull
  public final RelativeLayout pullDown;

  @NonNull
  public final RecyclerView rvPlansList;

  @NonNull
  public final MaterialButton txtGetDiamond;

  @NonNull
  public final AppCompatTextView txtLink;

  @NonNull
  public final AppCompatTextView txtPlanMessage;

  @NonNull
  public final AppCompatTextView txtPlanMonth;

  @NonNull
  public final AppCompatTextView txtPlanMonthOffer;

  @NonNull
  public final AppCompatTextView txtPlanType;

  @NonNull
  public final AppCompatTextView txtPlanValue;

  @NonNull
  public final AppCompatTextView txtText;

  private DialogSubscriptionPlansBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull CircleIndicator3 layoutIndicator,
      @NonNull CircleIndicator3 layoutIndicatorGreen, @NonNull RelativeLayout layoutPlan,
      @NonNull ViewPager2 planPager, @NonNull RelativeLayout pullDown,
      @NonNull RecyclerView rvPlansList, @NonNull MaterialButton txtGetDiamond,
      @NonNull AppCompatTextView txtLink, @NonNull AppCompatTextView txtPlanMessage,
      @NonNull AppCompatTextView txtPlanMonth, @NonNull AppCompatTextView txtPlanMonthOffer,
      @NonNull AppCompatTextView txtPlanType, @NonNull AppCompatTextView txtPlanValue,
      @NonNull AppCompatTextView txtText) {
    this.rootView = rootView;
    this.imgDialogGradient = imgDialogGradient;
    this.layoutIndicator = layoutIndicator;
    this.layoutIndicatorGreen = layoutIndicatorGreen;
    this.layoutPlan = layoutPlan;
    this.planPager = planPager;
    this.pullDown = pullDown;
    this.rvPlansList = rvPlansList;
    this.txtGetDiamond = txtGetDiamond;
    this.txtLink = txtLink;
    this.txtPlanMessage = txtPlanMessage;
    this.txtPlanMonth = txtPlanMonth;
    this.txtPlanMonthOffer = txtPlanMonthOffer;
    this.txtPlanType = txtPlanType;
    this.txtPlanValue = txtPlanValue;
    this.txtText = txtText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSubscriptionPlansBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSubscriptionPlansBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_subscription_plans, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSubscriptionPlansBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.layoutIndicator;
      CircleIndicator3 layoutIndicator = ViewBindings.findChildViewById(rootView, id);
      if (layoutIndicator == null) {
        break missingId;
      }

      id = R.id.layoutIndicatorGreen;
      CircleIndicator3 layoutIndicatorGreen = ViewBindings.findChildViewById(rootView, id);
      if (layoutIndicatorGreen == null) {
        break missingId;
      }

      id = R.id.layoutPlan;
      RelativeLayout layoutPlan = ViewBindings.findChildViewById(rootView, id);
      if (layoutPlan == null) {
        break missingId;
      }

      id = R.id.planPager;
      ViewPager2 planPager = ViewBindings.findChildViewById(rootView, id);
      if (planPager == null) {
        break missingId;
      }

      id = R.id.pullDown;
      RelativeLayout pullDown = ViewBindings.findChildViewById(rootView, id);
      if (pullDown == null) {
        break missingId;
      }

      id = R.id.rvPlansList;
      RecyclerView rvPlansList = ViewBindings.findChildViewById(rootView, id);
      if (rvPlansList == null) {
        break missingId;
      }

      id = R.id.txtGetDiamond;
      MaterialButton txtGetDiamond = ViewBindings.findChildViewById(rootView, id);
      if (txtGetDiamond == null) {
        break missingId;
      }

      id = R.id.txtLink;
      AppCompatTextView txtLink = ViewBindings.findChildViewById(rootView, id);
      if (txtLink == null) {
        break missingId;
      }

      id = R.id.txtPlanMessage;
      AppCompatTextView txtPlanMessage = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanMessage == null) {
        break missingId;
      }

      id = R.id.txtPlanMonth;
      AppCompatTextView txtPlanMonth = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanMonth == null) {
        break missingId;
      }

      id = R.id.txtPlanMonthOffer;
      AppCompatTextView txtPlanMonthOffer = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanMonthOffer == null) {
        break missingId;
      }

      id = R.id.txtPlanType;
      AppCompatTextView txtPlanType = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanType == null) {
        break missingId;
      }

      id = R.id.txtPlanValue;
      AppCompatTextView txtPlanValue = ViewBindings.findChildViewById(rootView, id);
      if (txtPlanValue == null) {
        break missingId;
      }

      id = R.id.txtText;
      AppCompatTextView txtText = ViewBindings.findChildViewById(rootView, id);
      if (txtText == null) {
        break missingId;
      }

      return new DialogSubscriptionPlansBinding((ConstraintLayout) rootView, imgDialogGradient,
          layoutIndicator, layoutIndicatorGreen, layoutPlan, planPager, pullDown, rvPlansList,
          txtGetDiamond, txtLink, txtPlanMessage, txtPlanMonth, txtPlanMonthOffer, txtPlanType,
          txtPlanValue, txtText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
