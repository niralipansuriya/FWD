// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import com.ramijemli.percentagechartview.PercentageChartView;
import com.swipefwd.R;
import com.swipefwd.utils.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout bottomLayout;

  @NonNull
  public final MaterialButton btnAccount;

  @NonNull
  public final MaterialButton btnContact;

  @NonNull
  public final MaterialButton btnDatingPref;

  @NonNull
  public final MaterialButton btnDeleteacc;

  @NonNull
  public final MaterialButton btnFAQ;

  @NonNull
  public final MaterialButton btnLogout;

  @NonNull
  public final MaterialButton btnPrivacy;

  @NonNull
  public final MaterialButton btnSubscription;

  @NonNull
  public final MaterialButton btnTerms;

  @NonNull
  public final MaterialButton btnTutorials;

  @NonNull
  public final MaterialButton btnVersion;

  @NonNull
  public final MaterialButton btnWallet;

  @NonNull
  public final AppCompatImageView imgCancel;

  @NonNull
  public final RoundedImageView imgSettings;

  @NonNull
  public final MaterialTextView ivLogo;

  @NonNull
  public final ConstraintLayout layoutMain;

  @NonNull
  public final PercentageChartView progressSettings;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtProgress;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout bottomLayout, @NonNull MaterialButton btnAccount,
      @NonNull MaterialButton btnContact, @NonNull MaterialButton btnDatingPref,
      @NonNull MaterialButton btnDeleteacc, @NonNull MaterialButton btnFAQ,
      @NonNull MaterialButton btnLogout, @NonNull MaterialButton btnPrivacy,
      @NonNull MaterialButton btnSubscription, @NonNull MaterialButton btnTerms,
      @NonNull MaterialButton btnTutorials, @NonNull MaterialButton btnVersion,
      @NonNull MaterialButton btnWallet, @NonNull AppCompatImageView imgCancel,
      @NonNull RoundedImageView imgSettings, @NonNull MaterialTextView ivLogo,
      @NonNull ConstraintLayout layoutMain, @NonNull PercentageChartView progressSettings,
      @NonNull TextView txtName, @NonNull TextView txtProgress) {
    this.rootView = rootView;
    this.bottomLayout = bottomLayout;
    this.btnAccount = btnAccount;
    this.btnContact = btnContact;
    this.btnDatingPref = btnDatingPref;
    this.btnDeleteacc = btnDeleteacc;
    this.btnFAQ = btnFAQ;
    this.btnLogout = btnLogout;
    this.btnPrivacy = btnPrivacy;
    this.btnSubscription = btnSubscription;
    this.btnTerms = btnTerms;
    this.btnTutorials = btnTutorials;
    this.btnVersion = btnVersion;
    this.btnWallet = btnWallet;
    this.imgCancel = imgCancel;
    this.imgSettings = imgSettings;
    this.ivLogo = ivLogo;
    this.layoutMain = layoutMain;
    this.progressSettings = progressSettings;
    this.txtName = txtName;
    this.txtProgress = txtProgress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomLayout;
      ConstraintLayout bottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.btnAccount;
      MaterialButton btnAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnAccount == null) {
        break missingId;
      }

      id = R.id.btnContact;
      MaterialButton btnContact = ViewBindings.findChildViewById(rootView, id);
      if (btnContact == null) {
        break missingId;
      }

      id = R.id.btnDatingPref;
      MaterialButton btnDatingPref = ViewBindings.findChildViewById(rootView, id);
      if (btnDatingPref == null) {
        break missingId;
      }

      id = R.id.btnDeleteacc;
      MaterialButton btnDeleteacc = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteacc == null) {
        break missingId;
      }

      id = R.id.btnFAQ;
      MaterialButton btnFAQ = ViewBindings.findChildViewById(rootView, id);
      if (btnFAQ == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      MaterialButton btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnPrivacy;
      MaterialButton btnPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (btnPrivacy == null) {
        break missingId;
      }

      id = R.id.btnSubscription;
      MaterialButton btnSubscription = ViewBindings.findChildViewById(rootView, id);
      if (btnSubscription == null) {
        break missingId;
      }

      id = R.id.btnTerms;
      MaterialButton btnTerms = ViewBindings.findChildViewById(rootView, id);
      if (btnTerms == null) {
        break missingId;
      }

      id = R.id.btnTutorials;
      MaterialButton btnTutorials = ViewBindings.findChildViewById(rootView, id);
      if (btnTutorials == null) {
        break missingId;
      }

      id = R.id.btnVersion;
      MaterialButton btnVersion = ViewBindings.findChildViewById(rootView, id);
      if (btnVersion == null) {
        break missingId;
      }

      id = R.id.btnWallet;
      MaterialButton btnWallet = ViewBindings.findChildViewById(rootView, id);
      if (btnWallet == null) {
        break missingId;
      }

      id = R.id.imgCancel;
      AppCompatImageView imgCancel = ViewBindings.findChildViewById(rootView, id);
      if (imgCancel == null) {
        break missingId;
      }

      id = R.id.imgSettings;
      RoundedImageView imgSettings = ViewBindings.findChildViewById(rootView, id);
      if (imgSettings == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      MaterialTextView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      ConstraintLayout layoutMain = (ConstraintLayout) rootView;

      id = R.id.progressSettings;
      PercentageChartView progressSettings = ViewBindings.findChildViewById(rootView, id);
      if (progressSettings == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txtProgress;
      TextView txtProgress = ViewBindings.findChildViewById(rootView, id);
      if (txtProgress == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, bottomLayout, btnAccount,
          btnContact, btnDatingPref, btnDeleteacc, btnFAQ, btnLogout, btnPrivacy, btnSubscription,
          btnTerms, btnTutorials, btnVersion, btnWallet, imgCancel, imgSettings, ivLogo, layoutMain,
          progressSettings, txtName, txtProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
