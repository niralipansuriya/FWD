// Generated by view binder compiler. Do not edit!
package com.swipefwd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.swipefwd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCancelSubscriptionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView imgDialogGradient;

  @NonNull
  public final AppCompatTextView txtCancelDesc;

  @NonNull
  public final AppCompatTextView txtCancelDesc1;

  @NonNull
  public final AppCompatTextView txtCancelDesc2;

  @NonNull
  public final AppCompatTextView txtCancelDesc3;

  @NonNull
  public final AppCompatTextView txtCancelDesc4;

  @NonNull
  public final AppCompatTextView txtCancelDesc5;

  @NonNull
  public final AppCompatTextView txtCancelDesc6;

  @NonNull
  public final AppCompatTextView txtCancelDesc7;

  @NonNull
  public final AppCompatTextView txtCancelTitle;

  @NonNull
  public final MaterialButton txtConfirm;

  @NonNull
  public final MaterialButton txtKeepAccount;

  private DialogCancelSubscriptionBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView imgDialogGradient, @NonNull AppCompatTextView txtCancelDesc,
      @NonNull AppCompatTextView txtCancelDesc1, @NonNull AppCompatTextView txtCancelDesc2,
      @NonNull AppCompatTextView txtCancelDesc3, @NonNull AppCompatTextView txtCancelDesc4,
      @NonNull AppCompatTextView txtCancelDesc5, @NonNull AppCompatTextView txtCancelDesc6,
      @NonNull AppCompatTextView txtCancelDesc7, @NonNull AppCompatTextView txtCancelTitle,
      @NonNull MaterialButton txtConfirm, @NonNull MaterialButton txtKeepAccount) {
    this.rootView = rootView;
    this.imgDialogGradient = imgDialogGradient;
    this.txtCancelDesc = txtCancelDesc;
    this.txtCancelDesc1 = txtCancelDesc1;
    this.txtCancelDesc2 = txtCancelDesc2;
    this.txtCancelDesc3 = txtCancelDesc3;
    this.txtCancelDesc4 = txtCancelDesc4;
    this.txtCancelDesc5 = txtCancelDesc5;
    this.txtCancelDesc6 = txtCancelDesc6;
    this.txtCancelDesc7 = txtCancelDesc7;
    this.txtCancelTitle = txtCancelTitle;
    this.txtConfirm = txtConfirm;
    this.txtKeepAccount = txtKeepAccount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCancelSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCancelSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_cancel_subscription, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCancelSubscriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgDialogGradient;
      AppCompatImageView imgDialogGradient = ViewBindings.findChildViewById(rootView, id);
      if (imgDialogGradient == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc;
      AppCompatTextView txtCancelDesc = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc1;
      AppCompatTextView txtCancelDesc1 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc1 == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc2;
      AppCompatTextView txtCancelDesc2 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc2 == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc3;
      AppCompatTextView txtCancelDesc3 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc3 == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc4;
      AppCompatTextView txtCancelDesc4 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc4 == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc5;
      AppCompatTextView txtCancelDesc5 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc5 == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc6;
      AppCompatTextView txtCancelDesc6 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc6 == null) {
        break missingId;
      }

      id = R.id.txtCancelDesc7;
      AppCompatTextView txtCancelDesc7 = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelDesc7 == null) {
        break missingId;
      }

      id = R.id.txtCancelTitle;
      AppCompatTextView txtCancelTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtCancelTitle == null) {
        break missingId;
      }

      id = R.id.txtConfirm;
      MaterialButton txtConfirm = ViewBindings.findChildViewById(rootView, id);
      if (txtConfirm == null) {
        break missingId;
      }

      id = R.id.txtKeepAccount;
      MaterialButton txtKeepAccount = ViewBindings.findChildViewById(rootView, id);
      if (txtKeepAccount == null) {
        break missingId;
      }

      return new DialogCancelSubscriptionBinding((ConstraintLayout) rootView, imgDialogGradient,
          txtCancelDesc, txtCancelDesc1, txtCancelDesc2, txtCancelDesc3, txtCancelDesc4,
          txtCancelDesc5, txtCancelDesc6, txtCancelDesc7, txtCancelTitle, txtConfirm,
          txtKeepAccount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
